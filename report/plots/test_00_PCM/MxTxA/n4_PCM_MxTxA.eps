%!PS-Adobe-2.0 EPSF-2.0
%%Title: plots/test_00_PCM/MxTxA/n4_PCM_MxTxA.eps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Sun Feb 13 14:33:32 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/test_00_PCM/MxTxA/n4_PCM_MxTxA.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (nico)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 13 14:33:32 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1106 448 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 448 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
1106 1282 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 1282 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5e+07)]
] -46.7 MRshow
1.000 UL
LTb
1106 2116 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+08)]
] -46.7 MRshow
1.000 UL
LTb
1106 2951 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 2951 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
1106 3785 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 3785 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+08)]
] -46.7 MRshow
1.000 UL
LTb
1106 4619 M
63 0 V
5820 0 R
-63 0 V
stroke
1022 4619 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2.5e+08)]
] -46.7 MRshow
1.000 UL
LTb
1106 448 M
0 63 V
0 4108 R
0 -63 V
stroke
1106 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2087 448 M
0 63 V
0 4108 R
0 -63 V
stroke
2087 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e+08)]
] -46.7 MCshow
1.000 UL
LTb
3067 448 M
0 63 V
0 4108 R
0 -63 V
stroke
3067 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 2e+08)]
] -46.7 MCshow
1.000 UL
LTb
4048 448 M
0 63 V
0 4108 R
0 -63 V
stroke
4048 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 3e+08)]
] -46.7 MCshow
1.000 UL
LTb
5028 448 M
0 63 V
0 4108 R
0 -63 V
stroke
5028 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 4e+08)]
] -46.7 MCshow
1.000 UL
LTb
6009 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6009 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 5e+08)]
] -46.7 MCshow
1.000 UL
LTb
6989 448 M
0 63 V
0 4108 R
0 -63 V
stroke
6989 308 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 6e+08)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
1106 4619 N
0 -4171 V
5883 0 V
0 4171 V
-5883 0 V
Z stroke
LCb setrgbcolor
196 2533 M
currentpoint gsave translate -270 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (Execution Time \(microsecs\))]
] -46.7 MCshow
grestore
LTb
LCb setrgbcolor
4047 98 M
[ [(Helvetica) 140.0 0.0 true true 0 (Number of integers)]
] -46.7 MCshow
LTb
4047 4829 M
[ [(Helvetica) 140.0 0.0 true true 0 (Performance with 4 processors \("PCM"\))]
] -46.7 MCshow
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UL
LT0
1106 448 M
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
53 0 V
54 0 V
53 0 V
53 0 V
53 0 V
% End plot #1
% Begin plot #2
1.000 UP
stroke
LT1
LCb setrgbcolor
6338 4486 M
[ [(Helvetica) 140.0 0.0 true true 0 (bitonicsort)]
] -46.7 MRshow
LT1
6422 4486 M
399 0 V
1106 448 M
1 0 V
2 0 V
2 1 V
5 0 V
11 2 V
20 2 V
41 6 V
83 11 V
164 27 V
329 42 V
658 97 V
3738 875 L
2632 390 V
1106 448 Pls
1106 448 Pls
1106 448 Pls
1106 448 Pls
1106 448 Pls
1106 448 Pls
1107 448 Pls
1107 448 Pls
1109 448 Pls
1111 449 Pls
1116 449 Pls
1127 451 Pls
1147 453 Pls
1188 459 Pls
1271 470 Pls
1435 497 Pls
1764 539 Pls
2422 636 Pls
3738 875 Pls
6370 1265 Pls
6621 4486 Pls
% End plot #2
% Begin plot #3
1.000 UP
1.000 UL
LT2
LCb setrgbcolor
6338 4346 M
[ [(Helvetica) 140.0 0.0 true true 0 (bucketsort)]
] -46.7 MRshow
LT2
6422 4346 M
399 0 V
1106 448 M
1 0 V
2 0 V
2 1 V
5 0 V
11 2 V
20 3 V
41 5 V
83 13 V
164 25 V
329 53 V
658 110 V
3738 887 L
2632 470 V
1106 448 Crs
1106 448 Crs
1106 448 Crs
1106 448 Crs
1106 448 Crs
1106 448 Crs
1107 448 Crs
1107 448 Crs
1109 448 Crs
1111 449 Crs
1116 449 Crs
1127 451 Crs
1147 454 Crs
1188 459 Crs
1271 472 Crs
1435 497 Crs
1764 550 Crs
2422 660 Crs
3738 887 Crs
6370 1357 Crs
6621 4346 Crs
% End plot #3
% Begin plot #4
1.000 UP
1.000 UL
LT3
LCb setrgbcolor
6338 4206 M
[ [(Helvetica) 140.0 0.0 true true 0 (kmerge)]
] -46.7 MRshow
LT3
6422 4206 M
399 0 V
1106 448 M
1 0 V
0 1 V
2 1 V
2 1 V
5 3 V
11 7 V
20 12 V
41 30 V
83 53 V
164 102 V
329 212 V
658 418 V
1316 850 V
6370 3856 L
1106 448 Star
1106 448 Star
1106 448 Star
1106 448 Star
1106 448 Star
1106 448 Star
1107 448 Star
1107 449 Star
1109 450 Star
1111 451 Star
1116 454 Star
1127 461 Star
1147 473 Star
1188 503 Star
1271 556 Star
1435 658 Star
1764 870 Star
2422 1288 Star
3738 2138 Star
6370 3856 Star
6621 4206 Star
% End plot #4
% Begin plot #5
1.000 UP
1.000 UL
LT4
LCb setrgbcolor
6338 4066 M
[ [(Helvetica) 140.0 0.0 true true 0 (lbkmergesort)]
] -46.7 MRshow
LT4
6422 4066 M
399 0 V
1106 448 M
1 0 V
2 1 V
2 0 V
5 1 V
11 3 V
20 5 V
41 10 V
83 20 V
164 41 V
329 85 V
658 174 V
1316 340 V
2632 707 V
1106 448 Box
1106 448 Box
1106 448 Box
1106 448 Box
1106 448 Box
1106 448 Box
1107 448 Box
1107 448 Box
1109 449 Box
1111 449 Box
1116 450 Box
1127 453 Box
1147 458 Box
1188 468 Box
1271 488 Box
1435 529 Box
1764 614 Box
2422 788 Box
3738 1128 Box
6370 1835 Box
6621 4066 Box
% End plot #5
% Begin plot #6
1.000 UP
1.000 UL
LT5
LCb setrgbcolor
6338 3926 M
[ [(Helvetica) 140.0 0.0 true true 0 (lbmergesort)]
] -46.7 MRshow
LT5
6422 3926 M
399 0 V
1106 448 M
1 0 V
2 0 V
2 1 V
5 0 V
11 2 V
20 3 V
41 6 V
83 12 V
164 26 V
329 52 V
658 108 V
3738 878 L
2632 459 V
1106 448 BoxF
1106 448 BoxF
1106 448 BoxF
1106 448 BoxF
1106 448 BoxF
1106 448 BoxF
1107 448 BoxF
1107 448 BoxF
1109 448 BoxF
1111 449 BoxF
1116 449 BoxF
1127 451 BoxF
1147 454 BoxF
1188 460 BoxF
1271 472 BoxF
1435 498 BoxF
1764 550 BoxF
2422 658 BoxF
3738 878 BoxF
6370 1337 BoxF
6621 3926 BoxF
% End plot #6
% Begin plot #7
1.000 UP
1.000 UL
LT6
LCb setrgbcolor
6338 3786 M
[ [(Helvetica) 140.0 0.0 true true 0 (mergesort)]
] -46.7 MRshow
LT6
6422 3786 M
399 0 V
1106 448 M
1 0 V
2 0 V
2 1 V
5 0 V
11 2 V
20 3 V
41 5 V
83 11 V
164 24 V
329 49 V
658 101 V
3738 851 L
2632 427 V
1106 448 Circle
1106 448 Circle
1106 448 Circle
1106 448 Circle
1106 448 Circle
1106 448 Circle
1107 448 Circle
1107 448 Circle
1109 448 Circle
1111 449 Circle
1116 449 Circle
1127 451 Circle
1147 454 Circle
1188 459 Circle
1271 470 Circle
1435 494 Circle
1764 543 Circle
2422 644 Circle
3738 851 Circle
6370 1278 Circle
6621 3786 Circle
% End plot #7
% Begin plot #8
1.000 UP
1.000 UL
LT7
LCb setrgbcolor
6338 3646 M
[ [(Helvetica) 140.0 0.0 true true 0 (quicksort)]
] -46.7 MRshow
LT7
6422 3646 M
399 0 V
1106 448 M
1 0 V
2 1 V
2 1 V
5 1 V
11 5 V
20 9 V
41 19 V
83 13 V
164 70 V
329 190 V
658 221 V
1316 598 V
2632 691 V
1106 448 CircleF
1106 448 CircleF
1106 448 CircleF
1106 448 CircleF
1106 448 CircleF
1106 448 CircleF
1107 448 CircleF
1107 448 CircleF
1109 449 CircleF
1111 450 CircleF
1116 451 CircleF
1127 456 CircleF
1147 465 CircleF
1188 484 CircleF
1271 497 CircleF
1435 567 CircleF
1764 757 CircleF
2422 978 CircleF
3738 1576 CircleF
6370 2267 CircleF
6621 3646 CircleF
% End plot #8
% Begin plot #9
1.000 UP
1.000 UL
LT8
LCb setrgbcolor
6338 3506 M
[ [(Helvetica) 140.0 0.0 true true 0 (samplesort)]
] -46.7 MRshow
LT8
6422 3506 M
399 0 V
1106 448 M
1 0 V
2 0 V
2 1 V
5 0 V
11 2 V
20 3 V
41 6 V
83 13 V
164 34 V
329 50 V
658 113 V
3738 904 L
2632 491 V
1106 448 TriU
1106 448 TriU
1106 448 TriU
1106 448 TriU
1106 448 TriU
1106 448 TriU
1107 448 TriU
1107 448 TriU
1109 448 TriU
1111 449 TriU
1116 449 TriU
1127 451 TriU
1147 454 TriU
1188 460 TriU
1271 473 TriU
1435 507 TriU
1764 557 TriU
2422 670 TriU
3738 904 TriU
6370 1395 TriU
6621 3506 TriU
% End plot #9
% Begin plot #10
1.000 UP
1.000 UL
LT0
LCb setrgbcolor
6338 3366 M
[ [(Helvetica) 140.0 0.0 true true 0 (sequential)]
] -46.7 MRshow
LT0
6422 3366 M
399 0 V
1106 448 M
1 0 V
2 1 V
2 1 V
5 2 V
11 3 V
20 9 V
41 17 V
83 35 V
164 75 V
329 156 V
658 319 V
1316 666 V
6370 3089 L
1106 448 TriUF
1106 448 TriUF
1106 448 TriUF
1106 448 TriUF
1106 448 TriUF
1106 448 TriUF
1107 448 TriUF
1107 448 TriUF
1109 449 TriUF
1111 450 TriUF
1116 452 TriUF
1127 455 TriUF
1147 464 TriUF
1188 481 TriUF
1271 516 TriUF
1435 591 TriUF
1764 747 TriUF
2422 1066 TriUF
3738 1732 TriUF
6370 3089 TriUF
6621 3366 TriUF
% End plot #10
1.000 UL
LTb
1106 4619 N
0 -4171 V
5883 0 V
0 4171 V
-5883 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
